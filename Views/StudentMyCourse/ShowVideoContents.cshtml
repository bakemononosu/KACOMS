@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_BaseLayout";
}
@model StudentMyCourseViewModel

<div class="sub-container">
    <div class="content-main">
        <form method="POST"></form>
        @if (Model.ShowVideoContent != null && Model.ShowVideoContent.MovieContents!.Chapter != null)
        {
            <div class="contents">
                <video @(Model.IsPlayNotAvailable ? "" : "controls") class="video-area" id="videotag"></video>
                <div class="action">
                    <button type="button" class="btn btn-outline-info" onclick="ShowPreviousNextChapter('previous')" @(Model.ShowVideoContent.IsFirstContent ? "disabled" : "")>前のセクション</button>
                    <button type="button" class="btn btn-outline-info" onclick="ShowPreviousNextChapter('next')" @(Model.ShowVideoContent.IsLastContent ? "disabled" : "")>次のセクション</button>
                    <button type="button" class="btn btn-outline-success" id="saveBookmarkBtn">しおりを挿む</button>
                </div>
            </div>
            <input type="hidden" id="userId" name="userId" value="@Model.ShowVideoContent?.UserId">
            <input type="hidden" id="courseId" name="courseId" value="@Model.ShowVideoContent?.CourseId">
            <input type="hidden" id="chapterId" name="chapterId" value="@Model.ShowVideoContent?.ChapterId">
            <input type="hidden" id="orderNo" name="orderNo" value="@Model.ShowVideoContent?.CurrentOrderNo">
            <input type="hidden" id="contentsPath" value="@Model.ShowVideoContent?.MovieContents.ContentsPath">
            <input type="hidden" id="bookmarkTime" value="@Model.ShowVideoContent?.BookmarkSeconds" />
        }
        else
        {
            <h5>削除済の動画です</h5>
        }
    </div>
</div>

@section scripts {
    <script src="~/js/ShowVideo.js" asp-append-version="true" charset="shift_jis"></script>
    <script src="~/js/ModalDialog.js" asp-append-version="true"></script>
    <script src="~/js/hls.js"></script>
    <script src="~/js/HlsVideo.js" asp-append-version="true"></script>
    <script>
        const isIos = @Html.Raw(Json.Serialize(Model.IsIOs));
        if ($('#contentsPath') != undefined) {
            if (!isIos) {
                loadVideo($('#videotag').get(0), $('#contentsPath').val());
            } else {
                $('#videotag').attr('src', $('#contentsPath').val());
            }
        }
    </script>

    <script>
        const contentsPath = $('#contentsPath').val();
        const bookmarkTime = parseFloat($('#bookmarkTime').val() || "0");
        const userId = $('#userId').val();
        const courseId = $('#courseId').val();
        const chapterId = $('#chapterId').val();

        let bookmarkSaved = false;

        if (contentsPath && video) {
            if (!isIos) {
                loadVideo(video, contentsPath);
            } else {
                $('#videotag').attr('src', contentsPath);
            }

            // 再生位置の復元
            video.addEventListener('loadedmetadata', function () {
                $.get("/Bookmark/Get", {
                    userId: userId,
                    courseId: courseId,
                    chapterId: chapterId
                }).done(function (data) {
                    if (!isNaN(data) && data > 0 && data < video.duration) {
                        video.currentTime = parseFloat(data);
                        console.log("しおりから再生位置を復元: " + data + "秒");
                    }
                });
            });

            // 動画最後まで見たら、しおり削除（修了）
            video.addEventListener('ended', function () {
                $.ajax({
                    url: '/Bookmark/Clear',
                    method: 'POST',
                    data: {
                        userId: userId,
                        courseId: courseId,
                        chapterId: chapterId
                    }
                });
            });
        }

        // 「しおりを挿む」ボタンを押したとき
        $('#saveBookmarkBtn').on('click', function () {
            if (video && !isNaN(video.currentTime) && video.duration) {
                const currentTime = Math.floor(video.currentTime);
                const progressRatio = currentTime / video.duration;

                if (progressRatio >= 0.8) {
                    $.ajax({
                        url: '/Bookmark/Save',
                        method: 'POST',
                        data: {
                            userId: userId,
                            courseId: courseId,
                            chapterId: chapterId,
                            bookmarkSeconds: currentTime
                        }
                    }).done(function () {
                        console.log(`しおりを ${currentTime} 秒に保存しました`);
                        alert("しおりを保存しました！");
                    }).fail(function () {
                        console.warn("しおり保存に失敗しました");
                        alert("しおり保存に失敗しました");
                    });
                } else {
                    alert("動画の80%以上を視聴しないとしおりは保存できません。");
                    console.warn(`視聴率は ${(progressRatio * 100).toFixed(1)}% です`);
                }
            }
        });


    </script>

}
