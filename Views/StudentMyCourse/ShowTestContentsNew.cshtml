@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using ElsWebApp.Services
@model ShowTestContentsViewModel
@{
    Layout = "_BaseLayout";
    var qIdx = 0;
    var aIdx = 0;
    var headerContents = "";
    var limitTime = "なし";
    if (!Model.IsDisplayMode)
    {
        // テスト実施
        if (Model.LimitLime > 0)
        {
            limitTime = $"{(Model.LimitLime / 60):00}:{(Model.LimitLime % 60):00}";
        }
        headerContents = $"制限時間 {limitTime}";
    }
    else
    {
        // 結果表示
        headerContents = $"採点結果 {Model.CollectCount} / {Model.QuestionCount}";
    }
}

<div class="sub-container">
    <div class="row h-100 ms-0 me-0 ps-3 pe-3">
        <div class="w-100 text-end"><h6>@headerContents</h6></div>
        <div class="d-flex">
            @{
                var colSetting = "col-12";
                var height = (1.65 * Model.QuestionCount) + 0.15;
                var testNoSelectAreaHeight = $"{height}rem";
                if (height > 37.5)
                {
                    testNoSelectAreaHeight = "37.5rem";
                }
            }
            @***********************************************@
            @* 問題数が2件以上の場合、問題選択エリアを作成 *@
            @***********************************************@
            @if (Model.QuestionCount > 1)
            {
                <div class="test-selector col-3 col-md-2 col-xl-2 col-xxl-1" style="height:@testNoSelectAreaHeight;">
                    @for (var no = 0; no < Model.QuestionCount; no++)
                    {
                        var selected = (no == 0) ? "test-no-selected" : "";
                        var testNo = $"問題{(no + 1)}";
                        var id = $"t_no_{(no + 1)}";
                        <div class="test-no test-no-noanswered @selected" id="@id">@testNo</div>
                    }
                </div>
                colSetting = "col-9 col-md-10 col-xl-10 col-xxl-11";
            }
            <div class="tab-content ms-1 ms-md-2 p-1 p-md-2 p-xl-3 @colSetting">
                @{
                    qIdx = 1;
                    var displayQuestion = "";
                    var displayAnswer = (Model.IsDisplayMode) ? "" : "d-none";
                    var disabled = (Model.IsDisplayMode) ? "disabled" : "";
                    foreach (var question in Model.Questions)
                    {
                        var id = $"q{qIdx}_tab_pane";
                        var queText = $"text_q{qIdx}";
                        var queGuid = $"guid_q{qIdx}";
                        var queImage = $"img_q{qIdx}";
                        var isQTextDisplay = (question.QText == "") ? "d-none" : "";
                        var isQImageDisplay = (question.QImage == "") ? "d-none" : "";
                        <div class="@displayQuestion" id="@id" tabindex="0">
                            <div class="card">
                                <div class="card-header"><h4>問題 @qIdx</h4></div>
                                <div class="card-body @isQTextDisplay" id="@queText">
                                    <h3 class="white-space-prewrap">@question.QText</h3>
                                </div>
                                <div class="card-body @isQImageDisplay" id="@queImage">
                                    <img src="@question.QImage" style="max-width:100%;height:auto;" />
                                </div>
                                <div class="d-none" id="@queGuid">@question.QId</div>
                            </div>
                            <div class="card mt-1 mt-sm-2 mt-md-3 mt-lg-4 mt-xl-5">
                                <div class="card-header"><h4>解答</h4></div>
                                <ul class="list-group list-group-flush">
                                @{
                                aIdx = 0;
                                foreach (var ans in question.Answers)
                                {
                                    var statusIcon = (ans.Status == "") ? "" :
                                    (ans.Status == ConstService.SystemCode.SYSCODE_ANS_CORRECT) ? "bi bi-check2-circle" : "bi bi-x-circle-fill";
                                    var ansId = $"a_{qIdx}_{aIdx}";
                                    var ansText = $"text_{qIdx}_{aIdx}";
                                    var ansGuid = $"guid_{qIdx}_{aIdx}";
                                    var checkd = (ans.AValue) ? "checked" : "";
                                    var isATextDisplay = (ans.AText == "") ? "d-none" : "";
                                    var isAImageDisplay = (ans.AImage == "") ? "d-none" : "";
                                    <li class="list-group-item">
                                        <div class="row align-items-center" id="@ansId">
                                            <div class="col-1 status-icon"><h3><i class="@statusIcon"></i></h3></div>
                                            <div class="col-1"><h3><input type="checkbox" class="form-check-input" @checkd @disabled data-parent="@id" /></h3></div>
                                            <div class="col-10" id="@ansText">
                                                <h3 class="@isATextDisplay white-space-prewrap">@ans.AText</h3>
                                                <img class="@isAImageDisplay" src="@ans.AImage" style="max-width:100%;height:auto;">
                                            </div>
                                            <div class="col d-none" id="@ansGuid">@ans.AId</div>
                                        </div>
                                        <div class="row @displayAnswer">
                                            <div class="col-2"></div>
                                            <div class="col-10 explaine-text">
                                                <h3>@ans.EText</h3>
                                            </div>
                                        </div>
                                    </li>
                                    aIdx++;
                                }
                                }
                                </ul>
                            </div>
                        </div>
                        qIdx++;
                        displayQuestion = "d-none";
                    }
                }
                <div class="d-flex justify-content-end p-1 p-lg-2"><button type="button" class="btn btn-outline-warning" id="send_answer" @disabled>解答送信</button></div>
                <div class="col d-flex justify-content-between p-1 p-lg-2">
                    @{
                        var nextChapter = "disabled";
                        var prevChapter = "disabled";
                        if (Model.IsDisplayMode)
                        {
                            nextChapter = (Model.NextChapter.ChapterId != Guid.Empty && !Model.NextChapter.IsDelete) ? "" : "disabled";
                            prevChapter = (Model.PrevChapter.ChapterId != Guid.Empty && !Model.PrevChapter.IsDelete) ? "" : "disabled";
                        }
                    }
                    <button type="button" class="btn btn-info" id="prev_chapter" @prevChapter>前のセクション</button>
                    <input type="hidden" id="prev_chapter_id" value="@Model.PrevChapter.ChapterId" />
                    <input type="hidden" id="prev_contents_type" value="@Model.PrevChapter.ContentsType" />
                    <button type="button" class="btn btn-info" id="next_chapter" @nextChapter>次のセクション</button>
                    <input type="hidden" id="next_chapter_id" value="@Model.NextChapter.ChapterId" />
                    <input type="hidden" id="next_contents_type" value="@Model.NextChapter.ContentsType" />
                </div>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="is_display_mode" value="@Model.IsDisplayMode" />
<input type="hidden" id="user_id" value="@Model.UserId" />
<input type="hidden" id="course_id" value="@Model.CourseId" />
<input type="hidden" id="chapter_id" value="@Model.ChapterId" />
<input type="hidden" id="user_chapter_id" value="@Model.UserChapterId" />
<input type="hidden" id="times" value="@Model.Times" />
<input type="hidden" id="limit_time" value="@Model.LimitLime" />
<input type="hidden" id="contents_type_video" value="@ConstService.SystemCode.SYSCODE_CON_MOVIE" />
<input type="hidden" id="contents_type_test" value="@ConstService.SystemCode.SYSCODE_CON_TEST" />

<form method="POST" enctype="multipart/form-data" asp-controller="StudentMyCourse" asp-action="GradeAnswers" asp-antiforgery="true" name="form">
    <input type="hidden" name="json" value="" id="json_param" />
</form>

@section Scripts {
    <script src="~/js/ModalDialog.js" asp-append-version="true"></script>
    <script src="~/js/ShowTestContentsNew.js" asp-append-version="true"></script>
}